@page
@model NB.Candle.WebRzorPage.Areas.Vendor.Pages.Colors.IndexModel
@{
    Layout = "/Areas/Vendor/Pages/Shared/_VendorLayout.cshtml";
}
<div class="row">
    <div class="col-12">
        <div class="bg-white rounded-3 p-3 ">
            <div class="row">
                <div class="col-12 ">
                    <div class="d-flex justify-content-between align-items-center pt-2 pb-2 border-bottom border-light fw-bold small ">
                        <div>
                            <span class="small">رنگ ها</span>
                        </div>
                        <a class="btn btn-link text-danger xx-small" asp-area="Vendor" asp-page="/index">
                            <span class="xx-small">بازگشت</span>
                            <i class="bi bi-chevron-left"></i>
                        </a>
                    </div>
                </div>

                <div class="col-12 mt-2">
                    <a asp-page="create" class="btn btn-outline-primary x-small d-inline-flex justify-content-center align-items-center">
                        <i class="bi bi-plus-circle "></i>
                        <span class="ms-2">جدید</span>
                    </a>
                </div>
                <div class="col-12 overflow-auto">
                    <table class="table table-sm table-striped table-hover table table-responsive table-bordered mt-2 align-middle ">
                        <thead class=" small">
                            <tr>
                                <th style="min-width:40px;" class="text-center" scope="col"></th>
                                <th style="min-width:40px;" class="text-center" scope="col">ردیف</th>
                                <th style="min-width:90px;" scope="col">نام</th>
                                <th style="min-width:90px;" scope="col">نوع رنگ</th>
                                <th style="min-width:90px;" scope="col">تصویر رنگ</th>
                                <th style="min-width:90px;" scope="col">وضعیت</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Colors.Select((property, i) => new { i, property }))
                            {
                                <tr>
                                    <th class="d-flex justify-content-center align-items-center">
                                        @*<a class="btn btn-primary xx-small p-1 me-1" asp-page="Update" asp-route-id="@item.property.ID"><i class="bi bi-pencil-fill xx-small"></i></a>*@
                                        <a class="btn btn-primary xx-small p-1 ms-1" asp-page="Delete" asp-route-id="@item.property.ID"><i class="bi bi-trash-fill xx-small"></i></a>
                                    </th>
                                    <th class="text-center" scope="row">@((item.i +1)+((Model.Pageinate.CurrentPageIndex-1)*Model.Pageinate.CurrentPageSize))</th>
                                    <td>
                                        <span class="x-small">@item.property.DisplayName</span>
                                    </td>
                                    <td>
                                        <span class="x-small">@item.property.ColorTypeName</span>
                                    </td>
                                    <td>
                                        @if (item.property.ColorType == Data.Enums.ColorType.color)
                                        {
                                            <span class="d-inline-block p-3 rounded-3 border border-light " style="background-color: @(item.property.ColorCode)"></span>
                                        }
                                        else
                                        {
                                            <img class="d-inline-block rounded-3 border border-light " style="object-fit:contain;height:3rem;width:3rem;    " src="@(item.property.ImageUrl)" />
                                        }
                                    </td>
                                    <td>
                                        <input disabled type="checkbox" asp-for="@item.property.IsActive" class="x-small" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="col-12">
                    <nav aria-label="Page navigation ">
                        <ul class="pagination pagination-sm justify-content-center">
                            @if (Model.Pageinate.HasPreviousPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-page="index" asp-route-pageIndex="@(Model.Pageinate.CurrentPageIndex-1)" asp-route-pageSize="@(Model.Pageinate.CurrentPageSize)" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item disabled">
                                    <a class="page-link " asp-page="index" asp-route-pageIndex="@(Model.Pageinate.CurrentPageIndex-1)" asp-route-pageSize="@(Model.Pageinate.CurrentPageSize)" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                            }

                            @if (Model.Pageinate.HasPreviousPage)
                            {
                                <li class="page-item"><a class="page-link" asp-page="index" asp-route-pageIndex="@(Model.Pageinate.CurrentPageIndex-1)" asp-route-pageSize="@(Model.Pageinate.CurrentPageSize)">@(Model.Pageinate.CurrentPageIndex-1)</a></li>
                            }

                            <li class="page-item active"><a class="page-link" asp-page="index" asp-route-pageIndex="@(Model.Pageinate.CurrentPageIndex)" asp-route-pageSize="@(Model.Pageinate.CurrentPageSize)">@Model.Pageinate.CurrentPageIndex</a></li>
                            @if (Model.Pageinate.HasNextPage)
                            {
                                <li class="page-item"><a class="page-link" asp-page="index" asp-route-pageIndex="@(Model.Pageinate.CurrentPageIndex+1)" asp-route-pageSize="@(Model.Pageinate.CurrentPageSize)">@(Model.Pageinate.CurrentPageIndex+1)</a></li>
                            }
                            @if (Model.Pageinate.HasNextPage)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-page="index" asp-route-pageIndex="@(Model.Pageinate.CurrentPageIndex+1)" asp-route-pageSize="@(Model.Pageinate.CurrentPageSize)" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item disabled">
                                    <a class="page-link " asp-page="index" asp-route-pageIndex="@(Model.Pageinate.CurrentPageIndex+1)" asp-route-pageSize="@(Model.Pageinate.CurrentPageSize)" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            }

                        </ul>
                    </nav>

                </div>

            </div>
        </div>
    </div>
</div>

